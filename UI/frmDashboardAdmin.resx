<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVolver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFCSURBVEhLzdQ9LwRRFMbxIQoNK6GjoNhKK0odIqLTShQKnU9gbaHZhB6RiESrID6ARqIQCQ0K
        iQ+whERC4vX/zOwIs8easXvEk/wy997k7NncuXOD/5ZmtEZDv3TjAOfhzCkjKOMNt1podLRVRTxDTVwa
        dWAXcQOXRv24QLJJQxuN4wZWE3nBJY6xjx2UMI1BtKBm9D4WoB+yGqSlQ7MK7YqZTViFv6U/vIZ2fMkG
        rIJ6naEHH2nCPOrdOsspqm6UUcQfp+UVOiz3n9bSKKAqvTiCVZA83m0YwBSWoK2y6q5h3pNaXEeyIM13
        lMcKkq9hAt9mBg/I0ijOMO4Q1y6iZrQ1V8jaSBnCE1S7pYWf0ok9nISzbFmGGqneNV14xHY4c84hdCm4
        R6dQF4J75jAZDX0zi75o6JuxytM9ucrzLxIE7xzNvNlXc/baAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="lblIconAdmin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>